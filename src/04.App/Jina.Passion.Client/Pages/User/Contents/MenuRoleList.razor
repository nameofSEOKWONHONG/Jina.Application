@using AntDesign.TableModels
@using Jina.Passion.Client.Base
@using Jina.Passion.Client.Base.Abstract
@using Jina.Passion.Client.Client.Base
@using Jina.Passion.Client.Pages.Account.ViewModels
@using Jina.Passion.Client.Pages.Weather.ViewModels

@inherits TablePageComponent<MenuRoleTemplate, MenuRoleViewModel, DlgOptions<bool>, bool>

<PageHeader Class="site-page-header" Title="Menu Role List" Subtitle="menu role list" />

<PageContainer>
    <Content>
        <div>
            <GridRow>
                <GridCol Span="10">
                    <SimpleSelect DefaultValue="admin" Style="width: auto;"
                                  OnSelectedItemChanged="@(item => SelectChanged(item))">
                        <SelectOptions>
                            @foreach (var item in this.menuRoleTemplate)
                            {
                                <SimpleSelectOption Value="@item.RoleName" Label="@item.RoleName"/>
                            }
                        </SelectOptions>
                    </SimpleSelect>
                </GridCol>
                <GridCol Span="6">
                </GridCol>
                <GridCol Span="6">
                </GridCol>
            </GridRow>
        </div>
        <Divider/>
        <Table @ref="table"
               TItem="MenuTemplate"
               DataSource="selectedMenuTemplate"
               Bordered=@true
               Title="Menu Role List"
               Size="TableSize.Small"
               Resizable
               PaginationPosition="none"
               RowKey="m=>m.Id">
             <Selection Key="@(context.Id.ToString())" />
             <PropertyColumn Property="m => m.Id" />
             <PropertyColumn Property="m => m.MenuName" />
             <PropertyColumn Property="m => m.View">
                 <Checkbox @bind-Value="@context.View" />
             </PropertyColumn>
             <PropertyColumn Property="m => m.Read">
                 <Checkbox @bind-Value="@context.Read" />
             </PropertyColumn>
             <PropertyColumn Property="m => m.Write">
                 <Checkbox @bind-Value="@context.Write" />
             </PropertyColumn>
             <PropertyColumn Property="m => m.Import">
                 <Checkbox @bind-Value="@context.Import" />
             </PropertyColumn>
             <PropertyColumn Property="m => m.Export">
                 <Checkbox @bind-Value="@context.Export" />
             </PropertyColumn>
         </Table>
     </Content>

     <ChildContent>
     </ChildContent>
 </PageContainer>

 @code {
    Table<MenuTemplate> table;
    List<MenuRoleTemplate> menuRoleTemplate;
    List<MenuTemplate> selectedMenuTemplate;
    protected override Task OnLoadAsync()
    {
        menuRoleTemplate = new List<MenuRoleTemplate>();

        var id = 1;
        var t = new string[] { "admin", "basic" };
        for (var i = 0; i < 2; i++)
        {
            int input = 123450;
            string output = "";

            var item = new MenuRoleTemplate();
            item.Menus = new();
            item.RoleName = t[i];
            if (i >= 1)
            {
                input = 12345670;
            }
            while (input > 0)
            {
                int current = input % 10;
                input /= 10;

                if (current == 0)
                    current = 10;

                output = (char)((char)'A' + (current - 1)) + output;
                item.Menus.Add(new MenuTemplate()
                    {
                        Id = id,
                        MenuName = output,
                        Export = i == 0 ? true : false,
                        Import = i == 0 ? true : false,
                        Read = i == 0 ? true : false,
                        Write = i == 0 ? true : false,
                        View = i == 0 ? true : false
                    });
                id += 1;
            }
            menuRoleTemplate.Add(item);
        }

        selectedMenuTemplate = menuRoleTemplate.First().Menus;

        return base.OnLoadAsync();
    }

    void SelectChanged(string key)
    {
        this.selectedMenuTemplate = this.menuRoleTemplate.First(m => m.RoleName == key).Menus;
        this.StateChanged();
    }
}